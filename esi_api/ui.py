# coding utf-8
"""
Autogenerated Template File
"""

from .base import EsiRequestObject


class UiOpenwindowMarketdetails(object):
    base_url = "https://esi.tech.ccp.is/latest/ui/openwindow/marketdetails/"

    post_responses = {'204': {'description': 'Open window request received'}, '500': {'description': 'Internal server error', 'examples': {'application/json': {'error': "uncaught exception: IOError('out of memory')"}}, 'schema': {'title': 'post_ui_openwindow_marketdetails_internal_server_error', 'type': 'object', 'description': 'Internal server error', 'properties': {'error': {'type': 'string', 'description': 'Internal server error message', 'title': 'post_ui_openwindow_marketdetails_500_internal_server_error'}}}}, '403': {'description': 'Forbidden', 'examples': {'application/json': {'error': 'Token is not valid for scope(s): esi-ui.open_window.v1'}}, 'schema': {'title': 'post_ui_openwindow_marketdetails_forbidden', 'type': 'object', 'description': 'Forbidden', 'properties': {'error': {'type': 'string', 'description': 'Forbidden message', 'title': 'post_ui_openwindow_marketdetails_403_forbidden'}}}}}

    def post(self, datasource="tranquility",token="None",type_id, user_agent="None",x_user_agent="None",):
        """
                Open the market details window for a specific typeID inside the client
        
        ---
        
        Alternate route: `/v1/ui/openwindow/marketdetails/`
        
        Alternate route: `/legacy/ui/openwindow/marketdetails/`
        
        Alternate route: `/dev/ui/openwindow/marketdetails/`

        :type datasource: str
        :param datasource: The server name you would like data from

        :type token: str
        :param token: Access token to use, if preferred over a header

        :type type_id: int
        :param type_id: The item type to open in market window

        :type user_agent: str
        :param user_agent: Client identifier, takes precedence over headers

        :type x_user_agent: str
        :param x_user_agent: Client identifier, takes precedence over User-Agent

        """
        return EsiRequestObject(self.base_url, self.post_responses) \
            .post(**{"datasource":datasource, "token":token, "type_id":type_id, "user_agent":user_agent, "X-User-Agent":x_user_agent, })


class UiOpenwindowContract(object):
    base_url = "https://esi.tech.ccp.is/latest/ui/openwindow/contract/"

    post_responses = {'204': {'description': 'Open window request received'}, '500': {'description': 'Internal server error', 'examples': {'application/json': {'error': "uncaught exception: IOError('out of memory')"}}, 'schema': {'title': 'post_ui_openwindow_contract_internal_server_error', 'type': 'object', 'description': 'Internal server error', 'properties': {'error': {'type': 'string', 'description': 'Internal server error message', 'title': 'post_ui_openwindow_contract_500_internal_server_error'}}}}, '403': {'description': 'Forbidden', 'examples': {'application/json': {'error': 'Token is not valid for scope(s): esi-ui.open_window.v1'}}, 'schema': {'title': 'post_ui_openwindow_contract_forbidden', 'type': 'object', 'description': 'Forbidden', 'properties': {'error': {'type': 'string', 'description': 'Forbidden message', 'title': 'post_ui_openwindow_contract_403_forbidden'}}}}}

    def post(self, contract_id, datasource="tranquility",token="None",user_agent="None",x_user_agent="None",):
        """
                Open the contract window inside the client
        
        ---
        
        Alternate route: `/v1/ui/openwindow/contract/`
        
        Alternate route: `/legacy/ui/openwindow/contract/`
        
        Alternate route: `/dev/ui/openwindow/contract/`

        :type contract_id: int
        :param contract_id: The contract to open

        :type datasource: str
        :param datasource: The server name you would like data from

        :type token: str
        :param token: Access token to use, if preferred over a header

        :type user_agent: str
        :param user_agent: Client identifier, takes precedence over headers

        :type x_user_agent: str
        :param x_user_agent: Client identifier, takes precedence over User-Agent

        """
        return EsiRequestObject(self.base_url, self.post_responses) \
            .post(**{"contract_id":contract_id, "datasource":datasource, "token":token, "user_agent":user_agent, "X-User-Agent":x_user_agent, })


class UiAutopilotWaypoint(object):
    base_url = "https://esi.tech.ccp.is/latest/ui/autopilot/waypoint/"

    post_responses = {'204': {'description': 'Open window request received'}, '500': {'description': 'Internal server error', 'examples': {'application/json': {'error': "uncaught exception: IOError('out of memory')"}}, 'schema': {'title': 'post_ui_autopilot_waypoint_internal_server_error', 'type': 'object', 'description': 'Internal server error', 'properties': {'error': {'type': 'string', 'description': 'Internal server error message', 'title': 'post_ui_autopilot_waypoint_500_internal_server_error'}}}}, '403': {'description': 'Forbidden', 'examples': {'application/json': {'error': 'Token is not valid for scope(s): esi-ui.write_waypoint.v1'}}, 'schema': {'title': 'post_ui_autopilot_waypoint_forbidden', 'type': 'object', 'description': 'Forbidden', 'properties': {'error': {'type': 'string', 'description': 'Forbidden message', 'title': 'post_ui_autopilot_waypoint_403_forbidden'}}}}}

    def post(self, add_to_beginning, clear_other_waypoints, datasource="tranquility",destination_id, token="None",user_agent="None",x_user_agent="None",):
        """
                Set a solar system as autopilot waypoint
        
        ---
        
        Alternate route: `/v2/ui/autopilot/waypoint/`
        
        Alternate route: `/dev/ui/autopilot/waypoint/`

        :type add_to_beginning: boolean
        :param add_to_beginning: Whether this solar system should be added to the beginning of all waypoints

        :type clear_other_waypoints: boolean
        :param clear_other_waypoints: Whether clean other waypoints beforing adding this one

        :type datasource: str
        :param datasource: The server name you would like data from

        :type destination_id: int
        :param destination_id: The destination to travel to, can be solar system, station or structure's id

        :type token: str
        :param token: Access token to use, if preferred over a header

        :type user_agent: str
        :param user_agent: Client identifier, takes precedence over headers

        :type x_user_agent: str
        :param x_user_agent: Client identifier, takes precedence over User-Agent

        """
        return EsiRequestObject(self.base_url, self.post_responses) \
            .post(**{"add_to_beginning":add_to_beginning, "clear_other_waypoints":clear_other_waypoints, "datasource":datasource, "destination_id":destination_id, "token":token, "user_agent":user_agent, "X-User-Agent":x_user_agent, })


class UiOpenwindowNewmail(object):
    base_url = "https://esi.tech.ccp.is/latest/ui/openwindow/newmail/"

    post_responses = {'422': {'description': 'Invalid request', 'examples': {'application/json': {'error': 'Unprocessable entity message'}}, 'schema': {'title': 'post_ui_openwindow_newmail_unprocessable_entity', 'type': 'object', 'description': 'Unprocessable entity', 'properties': {'error': {'type': 'string', 'description': 'Unprocessable entity message', 'title': 'post_ui_openwindow_newmail_422_unprocessable_entity'}}}}, '204': {'description': 'Open window request received'}, '500': {'description': 'Internal server error', 'examples': {'application/json': {'error': "uncaught exception: IOError('out of memory')"}}, 'schema': {'title': 'post_ui_openwindow_newmail_internal_server_error', 'type': 'object', 'description': 'Internal server error', 'properties': {'error': {'type': 'string', 'description': 'Internal server error message', 'title': 'post_ui_openwindow_newmail_500_internal_server_error'}}}}, '403': {'description': 'Forbidden', 'examples': {'application/json': {'error': 'Token is not valid for scope(s): esi-ui.open_window.v1'}}, 'schema': {'title': 'post_ui_openwindow_newmail_forbidden', 'type': 'object', 'description': 'Forbidden', 'properties': {'error': {'type': 'string', 'description': 'Forbidden message', 'title': 'post_ui_openwindow_newmail_403_forbidden'}}}}}

    def post(self, datasource="tranquility",new_mail, token="None",user_agent="None",x_user_agent="None",):
        """
                Open the New Mail window, according to settings from the request if applicable
        
        ---
        
        Alternate route: `/v1/ui/openwindow/newmail/`
        
        Alternate route: `/legacy/ui/openwindow/newmail/`
        
        Alternate route: `/dev/ui/openwindow/newmail/`

        :type datasource: str
        :param datasource: The server name you would like data from

        :type new_mail: None
        :param new_mail: The details of mail to create

        :type token: str
        :param token: Access token to use, if preferred over a header

        :type user_agent: str
        :param user_agent: Client identifier, takes precedence over headers

        :type x_user_agent: str
        :param x_user_agent: Client identifier, takes precedence over User-Agent

        """
        return EsiRequestObject(self.base_url, self.post_responses) \
            .post(**{"datasource":datasource, "new_mail":new_mail, "token":token, "user_agent":user_agent, "X-User-Agent":x_user_agent, })


class UiOpenwindowInformation(object):
    base_url = "https://esi.tech.ccp.is/latest/ui/openwindow/information/"

    post_responses = {'204': {'description': 'Open window request received'}, '500': {'description': 'Internal server error', 'examples': {'application/json': {'error': "uncaught exception: IOError('out of memory')"}}, 'schema': {'title': 'post_ui_openwindow_information_internal_server_error', 'type': 'object', 'description': 'Internal server error', 'properties': {'error': {'type': 'string', 'description': 'Internal server error message', 'title': 'post_ui_openwindow_information_500_internal_server_error'}}}}, '403': {'description': 'Forbidden', 'examples': {'application/json': {'error': 'Token is not valid for scope(s): esi-ui.open_window.v1'}}, 'schema': {'title': 'post_ui_openwindow_information_forbidden', 'type': 'object', 'description': 'Forbidden', 'properties': {'error': {'type': 'string', 'description': 'Forbidden message', 'title': 'post_ui_openwindow_information_403_forbidden'}}}}}

    def post(self, datasource="tranquility",target_id, token="None",user_agent="None",x_user_agent="None",):
        """
                Open the information window for a character, corporation or alliance inside the client
        
        ---
        
        Alternate route: `/v1/ui/openwindow/information/`
        
        Alternate route: `/legacy/ui/openwindow/information/`
        
        Alternate route: `/dev/ui/openwindow/information/`

        :type datasource: str
        :param datasource: The server name you would like data from

        :type target_id: int
        :param target_id: The target to open

        :type token: str
        :param token: Access token to use, if preferred over a header

        :type user_agent: str
        :param user_agent: Client identifier, takes precedence over headers

        :type x_user_agent: str
        :param x_user_agent: Client identifier, takes precedence over User-Agent

        """
        return EsiRequestObject(self.base_url, self.post_responses) \
            .post(**{"datasource":datasource, "target_id":target_id, "token":token, "user_agent":user_agent, "X-User-Agent":x_user_agent, })